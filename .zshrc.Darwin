# -*- mode: sh -*-

# shellcheck source=/dev/null

export LESSOPEN='| /usr/local/bin/src-hilite-lesspipe.sh %s'

alias ls="ls -G -w"
alias emacs='TERM=screen-24bit /usr/local/opt/emacs-mac/bin/emacs'
alias emacsclient='TERM=screen-24bit /usr/local/opt/emacs-mac/bin/emacsclient'
alias v8="rlwrap v8"
alias vless='/usr/local/share/vim/vim74/macros/less.sh'

export PATH=/usr/sbin:$PATH
export PATH=/usr/texbin:$PATH
export PATH=$HOME/android-sdks/platform-tools:$PATH
export PATH=$HOME/.cargo/bin:$PATH
export PATH=/opt/chefdk/bin:$PATH
export PATH=/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH

if [[ -d /usr/local/opt/llvm/bin ]]; then
export PATH=/usr/local/opt/llvm/bin:$PATH
fi

# Since /usr/local/kubebuilder/bin has its own kubectl, it should be placed at the loweest priority
export PATH=$PATH:/usr/local/kubebuilder/bin

source "${ZPLUG_HOME}"/repos/marzocchi/zsh-notify/notify.plugin.zsh

export SYS_NOTIFIER="/usr/local/bin/terminal-notifier"
export NOTIFY_COMMAND_COMPLETE_TIMEOUT=10
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export GROOVY_HOME=/usr/local/opt/groovy/libexec

function dnsrefresh() {
  sudo dscacheutil -flushcache
}

[[ -d $(brew --prefix)/share/zsh/site-functions ]] && fpath=($(brew --prefix)/share/zsh/site-functions $fpath)

if [[ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ]]; then
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
fi

if [[ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc ]]; then
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi

if [[ -e /usr/local/share/zsh/site-functions/_aws ]]; then
  source /usr/local/share/zsh/site-functions/_aws
fi

# Enable zsh completion of kubectl
# http://kubernetes.io/docs/user-guide/kubectl/kubectl_completion/
if which kubectl >/dev/null 2>&1; then
  source <(kubectl completion zsh)
fi

export GOROOT="$(go env GOROOT)"

# https://github.com/pstadler/keybase-gpg-github#optional-setting-up-tty
export GPG_TTY="$(tty)"
