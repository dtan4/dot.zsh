# -*- mode: sh -*-

export LESSOPEN='| /usr/local/bin/src-hilite-lesspipe.sh %s'

alias ls="ls -G -w"
alias emacs='/usr/local/opt/emacs-mac/bin/emacs'
alias emacsclient='/usr/local/opt/emacs-mac/bin/emacsclient'
alias v8="rlwrap v8"
alias vless='/usr/local/share/vim/vim74/macros/less.sh'

if [[ -x $(which gsed) ]]; then
  alias sed='gsed'
fi

export PATH=/usr/sbin:$PATH
export PATH=/usr/texbin:$PATH
export PATH=$HOME/android-sdks/platform-tools:$PATH
export PATH=/opt/chefdk/bin:$PATH
export PATH=/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH

source $ZPLUG_HOME/repos/marzocchi/zsh-notify/notify.plugin.zsh

export SYS_NOTIFIER="/usr/local/bin/terminal-notifier"
export NOTIFY_COMMAND_COMPLETE_TIMEOUT=10
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
export GROOVY_HOME=/usr/local/opt/groovy/libexec

# Print current connected Wi-Fi AP name
function wifi() {
    name=`/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | egrep "agrCtlRSSI|state|lastTxRate| SSID" | cut -d: -f2 | tr "\\n" ";" | sed 's/^[ ]//g' | cut -d";" -f4-4 | cut -d" " -f2-`

    if [ "$name" == "" ]; then
        return 1
    else
        echo $name
    fi
}

function nowplaying() {
    osascript -e 'tell application "iTunes" to return name of current track & " | " & artist of current track & " - " & album of current track'
}

function dnsrefresh() {
    sudo dscacheutil -flushcache
}

[[ -d $(brew --prefix)/share/zsh/site-functions ]] && fpath=($(brew --prefix)/share/zsh/site-functions $fpath)

if [[ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc ]]; then
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
fi

if [[ -e /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc ]]; then
  source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi

if [[ -e /usr/local/share/zsh/site-functions/_aws ]]; then
  source /usr/local/share/zsh/site-functions/_aws
fi

# Enable zsh completion of kubectl
# http://kubernetes.io/docs/user-guide/kubectl/kubectl_completion/
if which kubectl > /dev/null 2>&1; then
  source <(kubectl completion zsh)
fi

export GOROOT=`go env GOROOT`

# https://github.com/pstadler/keybase-gpg-github#optional-setting-up-tty
export GPG_TTY=$(tty)
