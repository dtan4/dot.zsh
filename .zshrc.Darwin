# -*- mode: sh -*-

export LESSOPEN='| /usr/local/bin/src-hilite-lesspipe.sh %s'

alias b2d="boot2docker"
alias ls="ls -G -w"
alias emacs='/usr/local/opt/emacs-mac/bin/emacs'
alias emacsclient='/usr/local/opt/emacs-mac/bin/emacsclient'
alias v8="rlwrap v8"
alias vless='/usr/local/share/vim/vim74/macros/less.sh'

if [[ -x $(which gsed) ]]; then
  alias sed='gsed'
fi

export PATH=/usr/sbin:$PATH
export PATH=/usr/texbin:$PATH
export PATH=$HOME/android-sdks/platform-tools:$PATH
export PATH=/opt/chefdk/bin:$PATH
export PATH=/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH

source $HOME/.zplug/repos/marzocchi/zsh-notify/notify.plugin.zsh

export SYS_NOTIFIER="/usr/local/bin/terminal-notifier"
export NOTIFY_COMMAND_COMPLETE_TIMEOUT=10
export HOMEBREW_CASK_OPTS="--appdir=/Applications"

# if [[ -x $(which docker-machine) ]]; then
#     if [[ -n $(docker-machine ls | grep default | grep Running) ]]; then
#         eval $(docker-machine env default)
#     fi
# fi

export GROOVY_HOME=/usr/local/opt/groovy/libexec

# function docker-start() {
#     if [[ -n $(docker-machine ls | grep default | grep Running) ]]; then
#         echo "docker-machine is already running!"
#         return
#     fi

#     docker-machine start default
#     eval $(docker-machine env default)
# }

function wifi() {
    name=`/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | egrep "agrCtlRSSI|state|lastTxRate| SSID" | cut -d: -f2 | tr "\\n" ";" | sed 's/^[ ]//g' | cut -d";" -f4-4 | cut -d" " -f2-`

    if [ "$name" == "" ]; then
        return 1
    else
        echo $name
    fi
}

function itpp() {
    osascript -e 'tell application "iTunes" to playpause'
}

function nowplaying() {
    osascript -e 'tell application "iTunes" to return name of current track & " | " & artist of current track & " - " & album of current track'
}

function dnsrefresh() {
    sudo dscacheutil -flushcache
}

[[ -d $(brew --prefix)/share/zsh/site-functions ]] && fpath=($(brew --prefix)/share/zsh/site-functions $fpath)

if [[ -e $HOME/google-cloud-sdk/path.zsh.inc ]]; then
  source $HOME/google-cloud-sdk/path.zsh.inc
fi

if [[ -e $HOME/google-cloud-sdk/completion.zsh.inc ]]; then
  source $HOME/google-cloud-sdk/completion.zsh.inc
fi

if [[ -e /usr/local/share/zsh/site-functions/_aws ]]; then
  source /usr/local/share/zsh/site-functions/_aws
fi
