# -*- mode: sh -*-

function peco_select_history() {
    local tac
    exists gtac && tac="gtac" || { exists tac && tac="tac" || { tac="tail -r" } }
    BUFFER=$(fc -l -n 1 | eval $tac | peco --query "$LBUFFER")
    CURSOR=$#BUFFER         # move cursor
    zle -R -c               # refresh
}
zle -N peco_select_history
bindkey "^R" peco_select_history

function peco-src () {
    local selected_dir=$(ghq list --full-path | peco --query "$LBUFFER")
    if [ -n "$selected_dir" ]; then
        BUFFER="cd ${selected_dir}"
        CURSOR=$#BUFFER         # move cursor
    fi
    zle -R -c               # refresh
}
zle -N peco-src
bindkey "^W" peco-src

function peco_select_directory() {
    local tac
    if which tac > /dev/null; then
        tac="tac"
    else
        tac="tail -r"
    fi
    local dest=$(_z -r 2>&1 | eval $tac | peco --query "$LBUFFER" | awk '{ print $2 }')
    if [ -n "${dest}" ]; then
        cd ${dest}
    fi
    zle reset-prompt
}
zle -N peco_select_directory
bindkey "^X^J" peco_select_directory

# http://blog.horimisli.me/entry/terminal-env-2014
function peco-proc () {
    local selected_pid=$(ps ax -o pid,lstart,command | peco --query "$LBUFFER" | awk '{print $1}')
    if [ -n "$selected_pid" ]; then
        kill $selected_pid
    fi
    zle -R -c
}
zle -N peco-proc
bindkey "^X^P" peco-proc

function findmemo () {
    ag --ignore "*.pdf" -l -i $1 ~/Dropbox/memo ~/Dropbox/junk | peco | xargs less
}

# http://k0kubun.hatenablog.com/entry/2014/07/06/033336
alias -g B='`git branch | peco | sed -e "s/^\*[ ]*//g"`'
alias -g C='`git log --oneline --branches | peco | cut -d" " -f1`'
alias -g F='`git ls-files | peco`'
alias -g P='`docker ps | peco | cut -d" " -f1`'
alias -g R='`git reflog | peco | cut -d" " -f1`'
