# -*- mode: sh -*-

# http://qiita.com/mollifier/items/8d5a627d773758dd8078
function rprompt-git-not-pushed() {
    local count
    if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
        return
    fi
    count=`git rev-list origin/master..master 2>/dev/null | wc -l | tr -d ' '`
    if [[ $count -ne 0 ]]; then
        echo "[%{${fg_bold[red]}%}${count}%{$reset_color%}]"
    fi
    return 0
}

function rprompt-git-stash() {
    local count
    if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
        return
    fi
    count=`git stash list 2>/dev/null | wc -l | tr -d ' '`
    if [[ $count -ne 0 ]]; then
        echo "[%{${fg_bold[yellow]}%}${count}%{$reset_color%}]"
    fi
    return 0
}

function rprompt-git-current-branch {
    local name st color

    if [[ "$PWD" =~ '/\.git(/.*)?$' ]]; then
        return
    fi
    name=$(git symbolic-ref --short HEAD 2> /dev/null)
    if [[ -z $name ]]; then
        return
    fi
    st=`git status 2> /dev/null`
    if [[ -n `echo "$st" | grep "^nothing to"` ]]; then
        color=${fg[green]}
    elif [[ -n `echo "$st" | grep "^nothing added"` ]]; then
        color=${fg[yellow]}
    elif [[ -n `echo "$st" | grep "^Untracked"` ]]; then
        color=${fg_bold[red]}
    else
        color=${fg[red]}
    fi

    commit_hash=`git log --oneline 2>/dev/null | head -n1 | cut -d' ' -f1`

    if [[ $commit_hash = "" ]]; then
        echo "[%{$color%}$name%{$reset_color%}]"
    else
        echo "[%{$color%}$name%{$reset_color%} $commit_hash]"
    fi
}

function rprompt-k8s-context {
  local context

  if which kubectl &> /dev/null; then
    context=`kubectl config current-context 2> /dev/null | cut -d'.' -f1`
  fi

  echo "[%{${fg[cyan]}%}$context%{$reset_color%}]"
}

function rprompt-gcp-project {
  local project

  if which gcloud &> /dev/null; then
    project=`gcloud config get-value project`
  fi

  echo "[%{${fg[cyan]}%}$project%{$reset_color%}]"
}

function rprompt-node-version {
    local version setting

    if which rbenv &> /dev/null; then
        version=`nodenv version | sed -e "s/ (set.*$//"`

        if [[ "`nodenv version | grep '.nodenv/version'`" = "" ]];then
            echo "[%{${fg[yellow]}%}$version%{$reset_color%}]"
        else
            echo "[%{${fg[magenta]}%}$version%{$reset_color%}]"
        fi
    fi
}

function rprompt-ruby-version {
    local version setting

    if which rbenv &> /dev/null; then
        version=`rbenv version | sed -e "s/ (set.*$//"`

        if [[ "`rbenv version | grep '.rbenv/version'`" = "" ]];then
            echo "[%{${fg[yellow]}%}$version%{$reset_color%}]"
        else
            echo "[%{${fg[magenta]}%}$version%{$reset_color%}]"
        fi
    fi
}

function refresh-prompt {
    PROMPT="%{${fg[magenta]}%}>%{$reset_color%} ${fg[yellow]}%}%(5~,%-2~/.../%2~,%~) ${fg[white]}%}[%D{%m-%d %T}]%{${reset_color}%} `rprompt-node-version` `rprompt-ruby-version` `rprompt-gcp-project` `rprompt-k8s-context` `rprompt-git-current-branch``rprompt-git-not-pushed``rprompt-git-stash`
%{%(?.${reset_color}.${fg[red]})%}$%{${reset_color}%} "
}

add-zsh-hook precmd refresh-prompt

setopt prompt_subst
PROMPT="%{${fg[magenta]}%}>%{$reset_color%} ${fg[yellow]}%}%(5~,%-2~/.../%2~,%~) ${fg[white]}%}[%D{%m-%d %T}]%{${reset_color}%} `rprompt-node-version` `rprompt-ruby-version` `rprompt-gcp-project` `rprompt-k8s-context` `rprompt-git-current-branch``rprompt-git-not-pushed``rprompt-git-stash`
$ "
PROMPT2='[%n]> '
